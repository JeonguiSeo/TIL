-- TEST - 29. 계열 정보를 저장할 카테고리 테이블 생성
-- Table name : TB_CATEGORY
-- Column : NAME (VARCHAR2(10)), USE_YN (CHAR(1), Default = 'Y')

CREATE TABLE TB_CATEGORY
(NAME VARCHAR2(10),
USE_YN CHAR(1) DEFAULT 'Y' CONSTRAINTS TB_CATEGORY_USE_YN_CK CHECK(USE_YN IN ('Y', 'N'))
);

SELECT COLUMN_NAME, DATA_TYPE, DATA_LENGTH, NULLABLE
FROM ALL_TAB_COLUMNS
WHERE TABLE_NAME = 'TB_CATEGORY';

SELECT *
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'TB_CATEGORY';


-- TEST - 30. 과목 구분을 저장할 테이블 생성
-- Table name : TB_CLASS_TYPE
-- Column : NO(VARCHAR2(5), PK), NAME(VARCHAR2(10))

CREATE TABLE TB_CLASS_TYPE
(NO VARCHAR2(5) CONSTRAINTS TB_CLASS_TYPE_NO_PK PRIMARY KEY,
NAME VARCHAR2(10)
);

SELECT COLUMN_NAME, DATA_TYPE, DATA_LENGTH, NULLABLE
FROM ALL_TAB_COLUMNS
WHERE TABLE_NAME = 'TB_CLASS_TYPE';

SELECT *
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'TB_CLASS_TYPE';


-- TEST - 31. TB_CATEGORY 테이블의 NAME column에 PK 생성
ALTER TABLE TB_CATEGORY
ADD CONSTRAINT TB_CATEGORY_NAME_PK PRIMARY KEY(NAME);

SELECT *
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'TB_CATEGORY';

-- TEST - 32. TB_CLASS_TYPE 테이블의 NAME column에 NOT NULL 생성
ALTER TABLE TB_CLASS_TYPE
MODIFY (NAME CONSTRAINTS TB_CLASS_TYPE_NAME_NN NOT NULL);

SELECT *
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'TB_CATEGORY';

SELECT COLUMN_NAME, DATA_TYPE, DATA_LENGTH, NULLABLE
FROM ALL_TAB_COLUMNS
WHERE TABLE_NAME = 'TB_CLASS_TYPE';


-- TEST - 33. 두 테이블에서 column name 'NO'는 기존 타입을 유지하면서 데이터 크기를 10으로 변경
-- Column name 'NAME'도 기존 타입을 유지하면서 데이터 크기를 20으로 변경

ALTER TABLE TB_CLASS_TYPE
MODIFY (NO VARCHAR2(10));

SELECT COLUMN_NAME, DATA_TYPE, DATA_LENGTH, NULLABLE
FROM ALL_TAB_COLUMNS
WHERE TABLE_NAME = 'TB_CLASS_TYPE';

ALTER TABLE TB_CATEGORY
MODIFY (NAME VARCHAR2(20));

SELECT COLUMN_NAME, DATA_TYPE, DATA_LENGTH, NULLABLE
FROM ALL_TAB_COLUMNS
WHERE TABLE_NAME = 'TB_CATEGORY';


